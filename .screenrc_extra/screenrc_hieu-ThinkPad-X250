# the following two lines give a two-line status, with the current window highlighted
hardstatus alwayslastline
hardstatus string '%{= kG}[%{G}%H%? %1`%?%{g}][%{G}%S%? %1`%?%{g}][%= %{= kw}%-w%{+b yk} %n*%t%?(%u)%? %{-}%+w %=%{g}][%{B}%m/%d %{W}%C%A%{g}]'
# highlight the caption line of the focused region
caption splitonly "%?%F%{.y}%:%?%3 %t"

# huge scrollback buffer
defscrollback 5000

# no welcome message
startup_message off

# 256 colors
attrcolor b ".I"
termcapinfo xterm 'Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm'
defbce on

# mouse tracking allows to switch region focus by clicking
#mousetrack on

# default windows
screen -t Python  0 python
screen -t linux_commands  1 bash
stuff "cd /home/hieu/Documents; BASED=\$PWD; BASEF=/home/hieu/Documents/linux_commands; vi -c 'set noexpandtab autoindent' \$BASEF^M"
screen -t tuxera_commands  2 bash
stuff "cd /home/hieu/Documents; BASED=\$PWD; BASEF=/home/hieu/Documents/tuxera_commands; vi -c 'set noexpandtab autoindent' \$BASEF^M"
screen -t git_commands  3 bash
stuff "cd /home/hieu/Documents; BASED=\$PWD; BASEF=/home/hieu/Documents/git_commands; vi -c 'set noexpandtab autoindent' \$BASEF^M"
screen -t Ticket_folder  4 bash
stuff "cd /home/hieu/Documents/Tuxera/Jira-tickets; BASED=\$PWD^M"
screen -t Gen_report  5 bash
stuff "cd /home/hieu/Documents/Tuxera/software/tuxera_genreport; BASED=\$PWD^M"
screen -t bin  6 bash
stuff "cd /home/hieu/bin; BASED=\$PWD^M"
screen -t Home  7 bash
stuff "cd /home/hieu; BASED=\$PWD^M"

select 0
#bind c screen 1 # window numbering starts at 1 not 0
#bind 0 select 10

# get rid of silly xoff stuff
# bind s split

# layouts
layout autosave on
layout new prime
select 1
layout new hori_split
select 1
split
#resize -v +8
focus down
select 2
focus up
layout new vert_split
select 1
split -v
focus right
select 2
focus left
layout new hori_split_main
select 1
split
#resize -v +7
focus down
select 2
split -v
#resize -h +10
focus right
select 3
focus up
layout new vert_split_main
select 1
split -v
focus right
select 2
split
focus down
select 3
focus left

# leave 'layout attach :last' as default
# layout attach prime
layout select prime

# navigating regions with Ctrl-arrows
bindkey "^[[1;5D" focus left
bindkey "^[[1;5C" focus right
bindkey "^[[1;5A" focus up
bindkey "^[[1;5B" focus down

# switch windows with F3 (prev) and F4 (next)
bindkey "^[OR" prev
bindkey "^[OS" next

# switch layouts with Ctrl+F3 (prev layout) and Ctrl+F4 (next)
bindkey "^[[1;5R" layout prev
bindkey "^[[1;5S" layout next

# F2 puts Screen into resize mode. Resize regions using hjkl keys.
bindkey "^[OQ" eval "command -c rsz" # enter resize mode

# use hjkl keys to resize regions
bind -c rsz h eval "resize -h -5" "command -c rsz"
bind -c rsz j eval "resize -v -5" "command -c rsz"
bind -c rsz k eval "resize -v +5" "command -c rsz"
bind -c rsz l eval "resize -h +5" "command -c rsz"

# quickly switch between regions using tab and arrows
bind -c rsz \t    eval "focus"       "command -c rsz" # Tab
bind -c rsz -k kl eval "focus left"  "command -c rsz" # Left
bind -c rsz -k kr eval "focus right" "command -c rsz" # Right
bind -c rsz -k ku eval "focus up"    "command -c rsz" # Up
bind -c rsz -k kd eval "focus down" "command -c rsz" # Down

# Create temporary layout for fullscreen with F1, remove with Ctrl+F1
# TODO: select current focused window by default, and return to the last
# layout when exit. Quite impossible with GNU screen.
bindkey "^[OP" exec screen_open_fullscreen.sh
bindkey "^[[1;5P" exec screen_close_fullscreen.sh
