#!/usr/bin/env bash

source box.sh
box "Show and set current Azure Subcription for az cli"

#@ usage: 
#@ author: Hieu Tran
#@ email : hieu.tran@upm.com

PROGNAME=${0##*/}

## Default values
EXIT_FAILURE=1

function usage() {
    echo -e "$PROGNAME - \n"
    echo -e "usage: $PROGNAME [-h] [-?]\n"
    echo -e "   -h: Print this help message."
    echo -e "   -?: Print this help message."
}

function die() {
    echo "ERROR: $*" >&2
    exit $EXIT_FAILURE
}


## List of options the program will accept;
## those options that take arguments are followed by a colon
OPTSTRING='h?'

## The loop calls getopts until there are no more options on the command line
## Each option is stored in $OPT, any option arguments are stored in OPTARG
while getopts "$OPTSTRING" OPT
do
    case $OPT in
        *)
            usage >&2
            exit $EXIT_FAILURE
            ;;
    esac
done

## Remove options from the command line
## $OPTIND points to the next, unparsed argument
shift "$(( OPTIND - 1 ))"

echo -n "Current subscription is: "
az account show | jq '{name,user}'

SUBSCRIPTION_LIST=$( az account list )
SUBSCRIPTION_NAME=$( echo ${SUBSCRIPTION_LIST} | jq '.[].name' | \
    fzf \
        --ansi \
        --reverse \
        --no-mouse \
        --height 20%
)
if [ -n "${SUBSCRIPTION_NAME}" ]; then
    SUBSCRIPTION_ID=$( echo ${SUBSCRIPTION_LIST} | \
        jq ".[] | select(.name | contains(${SUBSCRIPTION_NAME})).id" )
    az account set -s ${SUBSCRIPTION_ID//\"/}

    echo -n "Changed subscription to: "
    az account show | jq '.name'
fi
